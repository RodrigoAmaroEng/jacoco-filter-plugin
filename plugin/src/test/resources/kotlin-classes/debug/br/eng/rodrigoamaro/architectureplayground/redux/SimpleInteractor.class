// IntelliJ API Decompiler stub source generated from a class file
// Implementation of methods is not available

package br.eng.rodrigoamaro.architectureplayground.redux

abstract class SimpleInteractor<STATE : br.eng.rodrigoamaro.architectureplayground.redux.State>  (store: br.eng.rodrigoamaro.architectureplayground.redux.Store<STATE>) : br.eng.rodrigoamaro.architectureplayground.redux.Interactor, io.reactivex.functions.Consumer<STATE> {
    private val eventDisposal: io.reactivex.disposables.CompositeDisposable /* compiled code */

    private val store: br.eng.rodrigoamaro.architectureplayground.redux.Store<STATE> /* compiled code */

    fun handle(action: io.reactivex.Observable<br.eng.rodrigoamaro.architectureplayground.redux.Action>): kotlin.Unit { /* compiled code */ }

    open fun turnOff(): kotlin.Unit { /* compiled code */ }

    open fun turnOn(): kotlin.Unit { /* compiled code */ }
}

